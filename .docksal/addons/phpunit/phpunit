#!/usr/bin/env bash

#: exec_target = cli

## Creates a phpunit.xml file and runs PHPUnit tests in Drupal 8
##
## Usage: fin phpunit <args>
##
## This first ensures that a `core/phpunit.xml` file exists, either by copying a
## stub, or copying and renaming `core/phpunit.xml.dist`.
##
## If `core/phpunit.xml` exists, the phpunit command with then be run, appending
## any optional arguments such as the directory path (run `fin phpunit -h`) to
## see a full list of options.

DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
DRUPAL_CORE_PATH="${DOCROOT_PATH}/core"

copy_stubs() {
    echo "Copying $1 to $DOCROOT_PATH"
    cp -R $1/* $DOCROOT_PATH
}

run_tests() {
    ${PROJECT_ROOT}/vendor/bin/phpunit -c $DRUPAL_CORE_PATH "$@"
}

if [ ! -e ${DRUPAL_CORE_PATH}/phpunit.xml ]; then
    STUB_PATH="${PROJECT_ROOT}/.docksal/addons/phpunit/stubs"
    OLD_STUB_PATH="${PROJECT_ROOT}/.docksal/drupal"

    # Copy from new stub path.
    if [ -e $STUB_PATH ]; then
        copy_stubs $STUB_PATH
        run_tests "$@"

    # Deprecated: Copy from old stub path.
    elif [ -e $OLD_STUB_PATH ]; then
        copy_stubs $OLD_STUB_PATH
        run_tests "$@"

    # Fallback: duplicate and rename phpunit.xml.dist.
    else
        echo "Copying phpunit.xml.dist to phpunit.xml."
        echo "Please edit it's values as needed and re-run 'fin phpunit'."
        cp ${DRUPAL_CORE_PATH}/phpunit.xml.dist ${DRUPAL_CORE_PATH}/phpunit.xml
        exit 1;
    fi
else
    run_tests "$@"
fi
